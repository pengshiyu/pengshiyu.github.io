<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Charles4.0.2在Mac环境安装及使用</title>
    <url>/2020/charles-install-and-using/</url>
    <content><![CDATA[<p><img src="/uploads/WX20200329-184509@2x.png" alt=""></p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>版本：4.20<br>下载地址：<a href="https://pan.baidu.com/s/1c22zTWO" target="_blank" rel="noopener">https://pan.baidu.com/s/1c22zTWO</a>    密码：6mu3</p>
<p>备用链接: <a href="https://pan.baidu.com/s/1Q51aoOb5KGoS8mBtOK_QQQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1Q51aoOb5KGoS8mBtOK_QQQ</a><br>提取码: dx5e </p>
<a id="more"></a>

<p>Charles的破解方法：<br>1.打开dmg镜像，将“Charles.app”拖入应用程序中；<br>2.打开应用程序—右键“Charles.app”显示包内容—Contents—Java；<br>3.将dmg镜像包内的“charles.jar”替换覆盖到第二步的Java文件夹中；<br>4.打开“Charles.app”，等待10秒，菜单栏中找到“Help”—“Register Charles…”，输入任意信息完成注册；<br>5.完成<br>系统版本要求：OS X 10.7 或更高。</p>
<h1 id="乱码问题"><a href="#乱码问题" class="headerlink" title="乱码问题"></a>乱码问题</h1><p>下载 CA 证书文件安装ssl证书：<br><a href="https://www.charlesproxy.com/documentation/additional/legacy-ssl-proxying/" target="_blank" rel="noopener">https://www.charlesproxy.com/documentation/additional/legacy-ssl-proxying/</a></p>
<p>具体参考本文末尾文章</p>
<p>1、安装证书<br>上方菜单栏 —-》Help —-》SSL Proxying —-》Install Charles Root Certificate<br>并信任证书</p>
<p>2、设置抓取端口<br>上方菜单栏 —-》Proxy —-》SSL Proxy Settings —-》Add<br>Host：填*表示所有网站都抓<br>Port：443 </p>
<p>参考：<br><a href="https://blog.csdn.net/a327369238/article/details/52856833" target="_blank" rel="noopener">Mac Charles乱码解决办法</a></p>
<h1 id="手机抓包"><a href="#手机抓包" class="headerlink" title="手机抓包"></a>手机抓包</h1><h2 id="iphone："><a href="#iphone：" class="headerlink" title="iphone："></a>iphone：</h2><ol>
<li><a href="https://www.jianshu.com/p/595e8b556a60?from=timeline&isappinstalled=0" target="_blank" rel="noopener">使用Charles对iPhone进行Http(s)请求拦截(抓包)</a><h2 id="android："><a href="#android：" class="headerlink" title="android："></a>android：</h2></li>
<li><a href="https://jingyan.baidu.com/article/495ba841c49f1438b30ede90.html" target="_blank" rel="noopener">Mac下使用Charles进行Android抓包</a></li>
<li><a href="https://jingyan.baidu.com/article/db55b609dbf04f4ba30a2fb2.html" target="_blank" rel="noopener">如何给华为手机网络连接设置代理</a></li>
<li><a href="https://jingyan.baidu.com/article/ad310e800d47361849f49efd.html" target="_blank" rel="noopener">华为怎么安装证书</a></li>
</ol>
<blockquote>
<p>参考：<br><a href="http://www.sdifen.com/charles402.html" target="_blank" rel="noopener">Charles 4.0.2 Mac破解版</a><br><a href="https://www.jianshu.com/p/ddef21c3b9ba" target="_blank" rel="noopener">解决Charles乱码问题</a></p>
</blockquote>
]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>Charles</tag>
      </tags>
  </entry>
  <entry>
    <title>Github不能正常访问的解决方法</title>
    <url>/2020/github-cannot-open/</url>
    <content><![CDATA[<h2 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h2><p>1、Github能打开，图片不能正常显示<br>2、Github代码推送超时</p>
<a id="more"></a>

<h2 id="解决："><a href="#解决：" class="headerlink" title="解决："></a>解决：</h2><p>hosts文件添加ip映射</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">windows下路径：</span><br><span class="line">C:\Windows\System32\drivers\etc\hosts</span><br><span class="line"></span><br><span class="line">Linux下路径：</span><br><span class="line">&#x2F;etc&#x2F;hosts</span><br></pre></td></tr></table></figure>

<p>加入以下内容</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># GitHub Start</span><br><span class="line"></span><br><span class="line">192.30.253.112 github.com</span><br><span class="line"></span><br><span class="line">192.30.253.119 gist.github.com</span><br><span class="line"></span><br><span class="line">151.101.100.133 assets-cdn.github.com</span><br><span class="line"></span><br><span class="line">151.101.100.133 raw.githubusercontent.com</span><br><span class="line"></span><br><span class="line">151.101.100.133 gist.githubusercontent.com</span><br><span class="line"></span><br><span class="line">151.101.100.133 cloud.githubusercontent.com</span><br><span class="line"></span><br><span class="line">151.101.100.133 camo.githubusercontent.com</span><br><span class="line"></span><br><span class="line">151.101.100.133 avatars0.githubusercontent.com</span><br><span class="line"></span><br><span class="line">151.101.100.133 avatars1.githubusercontent.com</span><br><span class="line"></span><br><span class="line">151.101.100.133 avatars2.githubusercontent.com</span><br><span class="line"></span><br><span class="line">151.101.100.133 avatars3.githubusercontent.com</span><br><span class="line"></span><br><span class="line">151.101.100.133 avatars4.githubusercontent.com</span><br><span class="line"></span><br><span class="line">151.101.100.133 avatars5.githubusercontent.com</span><br><span class="line"></span><br><span class="line">151.101.100.133 avatars6.githubusercontent.com</span><br><span class="line"></span><br><span class="line">151.101.100.133 avatars7.githubusercontent.com</span><br><span class="line"></span><br><span class="line">151.101.100.133 avatars8.githubusercontent.com</span><br></pre></td></tr></table></figure>
<blockquote>
<p>参考<br><a href="https://www.jianshu.com/p/4ca8fd6d6b16" target="_blank" rel="noopener">Github之前进入正常，随后访问不了解决方案</a></p>
</blockquote>
]]></content>
      <tags>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>lxml模块常用体系结构</title>
    <url>/2020/lxml-start/</url>
    <content><![CDATA[<p>lxml模块可以对html文档进行增、删、改、查，可以很方便的处理网页</p>
<a id="more"></a>

<p>lxml模块常用体系结构：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">lxml.etree</span><br><span class="line">    <span class="class"><span class="keyword">class</span></span></span><br><span class="line"><span class="class">        <span class="title">XMLParser</span></span></span><br><span class="line"><span class="class">        <span class="title">XMLPullParser</span>   </span></span><br><span class="line"><span class="class">        <span class="title">HTMLParser</span></span></span><br><span class="line"><span class="class">        <span class="title">HTMLPullParser</span></span></span><br><span class="line"><span class="class">        <span class="title">XPath</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">    <span class="title">function</span></span></span><br><span class="line"><span class="class">        <span class="title">Comment</span><span class="params">(text=None)</span></span></span><br><span class="line"><span class="class">        <span class="title">Element</span><span class="params">(_tag, attrib=None, nsmap=None, **_extra)</span></span></span><br><span class="line"><span class="class">        <span class="title">ElementTree</span><span class="params">(element=None, file=None, parser=None)</span></span></span><br><span class="line"><span class="class">        </span></span><br><span class="line"><span class="class">        # 解析字符串</span></span><br><span class="line"><span class="class">        <span class="title">HTML</span><span class="params">(text, parser=None, base_url=None)</span></span></span><br><span class="line"><span class="class">        <span class="title">XML</span><span class="params">(text, parser=None, base_url=None)</span></span></span><br><span class="line"><span class="class">        <span class="title">fromstring</span><span class="params">(text, parser=None, base_url=None)</span></span></span><br><span class="line"><span class="class">        <span class="title">parse</span><span class="params">(source, parser=None, base_url=None)</span></span></span><br><span class="line"><span class="class">        </span></span><br><span class="line"><span class="class">        # 序列化</span></span><br><span class="line"><span class="class">        <span class="title">tostring</span><span class="params">(element_or_tree, encoding=None, method=<span class="string">"xml"</span>, xml_declaration=None, pretty_print=False, with_tail=True, standalone=None, doctype=None, exclusive=False, inclusive_ns_prefixes=None, with_comments=True, strip_text=False, )</span></span></span><br><span class="line"><span class="class">        <span class="title">tounicode</span><span class="params">(element_or_tree, method=<span class="string">"xml"</span>, pretty_print=False, with_tail=True, doctype=None)</span></span></span><br><span class="line"><span class="class">        </span></span><br><span class="line"><span class="class">        # 默认解析器<span class="title">lxml</span>.<span class="title">etree</span>.<span class="title">XMLParser</span></span></span><br><span class="line"><span class="class">        <span class="title">get_default_parser</span><span class="params">()</span> </span></span><br><span class="line"><span class="class">        <span class="title">set_default_parser</span><span class="params">(parser=None)</span></span></span><br><span class="line"><span class="class">        </span></span><br><span class="line"><span class="class">        # 修剪</span></span><br><span class="line"><span class="class">        <span class="title">strip_attributes</span><span class="params">(tree_or_element, *attribute_names)</span></span></span><br><span class="line"><span class="class">        <span class="title">strip_elements</span><span class="params">(tree_or_element, with_tail=True, *tag_names)</span></span></span><br><span class="line"><span class="class">        <span class="title">strip_tags</span><span class="params">(tree_or_element, *tag_names)</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">lxml</span>.<span class="title">etree</span>.<span class="title">_Element</span></span></span><br><span class="line"><span class="class">    <span class="title">https</span>:</span>//lxml.de/api/lxml.etree._Element-<span class="class"><span class="keyword">class</span>.<span class="title">html</span></span></span><br><span class="line"><span class="class">    </span></span><br><span class="line"><span class="class">    <span class="title">addnext</span><span class="params">(self, element)</span></span></span><br><span class="line"><span class="class">    <span class="title">getnext</span><span class="params">(self)</span></span></span><br><span class="line"><span class="class">    <span class="title">addprevious</span><span class="params">(self, element)</span>  </span></span><br><span class="line"><span class="class">    <span class="title">getprevious</span><span class="params">(self)</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">    <span class="title">append</span><span class="params">(self, element)</span></span></span><br><span class="line"><span class="class">    <span class="title">insert</span><span class="params">(self, index, element)</span></span></span><br><span class="line"><span class="class">    <span class="title">clear</span><span class="params">(self, keep_tail=False)</span></span></span><br><span class="line"><span class="class">    <span class="title">remove</span><span class="params">(self, element)</span></span></span><br><span class="line"><span class="class">    <span class="title">replace</span><span class="params">(self, old_element, new_element)</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">    <span class="title">extend</span><span class="params">(self, elements)</span>  </span></span><br><span class="line"><span class="class">    <span class="title">find</span><span class="params">(self, path, namespaces=None)</span></span></span><br><span class="line"><span class="class">    <span class="title">findall</span><span class="params">(self, path, namespaces=None)</span>    </span></span><br><span class="line"><span class="class">    <span class="title">findtext</span><span class="params">(self, path, default=None, namespaces=None)</span></span></span><br><span class="line"><span class="class">    </span></span><br><span class="line"><span class="class">    <span class="title">getchildren</span><span class="params">(self)</span></span></span><br><span class="line"><span class="class">    <span class="title">getparent</span><span class="params">(self)</span></span></span><br><span class="line"><span class="class">    <span class="title">getroottree</span><span class="params">(self)</span>   </span></span><br><span class="line"><span class="class">    <span class="title">index</span><span class="params">(self, child, start=None, stop=None)</span></span></span><br><span class="line"><span class="class">    </span></span><br><span class="line"><span class="class">    <span class="title">makeelement</span><span class="params">(self, _tag, attrib=None, nsmap=None, **_extra)</span></span></span><br><span class="line"><span class="class">    </span></span><br><span class="line"><span class="class">    # 属性操作</span></span><br><span class="line"><span class="class">    <span class="title">items</span><span class="params">(self)</span></span></span><br><span class="line"><span class="class">    <span class="title">keys</span><span class="params">(self)</span></span></span><br><span class="line"><span class="class">    <span class="title">get</span><span class="params">(self, key, default=None)</span></span></span><br><span class="line"><span class="class">    <span class="title">set</span><span class="params">(self, key, value)</span></span></span><br><span class="line"><span class="class">    <span class="title">values</span><span class="params">(self)</span></span></span><br><span class="line"><span class="class">    </span></span><br><span class="line"><span class="class">    # 选择器</span></span><br><span class="line"><span class="class">    <span class="title">cssselect</span><span class="params">(...)</span></span></span><br><span class="line"><span class="class">    <span class="title">xpath</span><span class="params">(self, _path, namespaces=None, extensions=None, smart_strings=True, **_variables)</span></span></span><br><span class="line"><span class="class">    </span></span><br><span class="line"><span class="class">    # 属性</span></span><br><span class="line">    attrib get(), set(), keys(), values() and items()</span><br><span class="line">    base</span><br><span class="line">    tag</span><br><span class="line">    tail</span><br><span class="line">    text</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">lxml.etree.ElementTree</span><br><span class="line">    __init__(self, element=<span class="literal">None</span>, file=<span class="literal">None</span>)</span><br><span class="line">    find(self, path, namespaces=<span class="literal">None</span>)</span><br><span class="line">    findall(self, path, namespaces=<span class="literal">None</span>)</span><br><span class="line">    findtext(self, path, default=<span class="literal">None</span>, namespaces=<span class="literal">None</span>)     </span><br><span class="line">    getiterator(self, tag=<span class="literal">None</span>)</span><br><span class="line">    getroot(self)</span><br><span class="line">    iter(self, tag=<span class="literal">None</span>)</span><br><span class="line">    iterfind(self, path, namespaces=<span class="literal">None</span>)   source code</span><br><span class="line">    parse(self, source, parser=<span class="literal">None</span>)    source code</span><br><span class="line">    write(self, file_or_filename, encoding=<span class="literal">None</span>, xml_declaration=<span class="literal">None</span>, default_namespace=<span class="literal">None</span>, method=<span class="literal">None</span>) source code</span><br><span class="line">    write_c14n(self, file)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">lxml.http</span><br><span class="line">    https://lxml.de/api/lxml.html-module.html</span><br><span class="line">    <span class="class"><span class="keyword">class</span></span></span><br><span class="line"><span class="class">        <span class="title">HTMLParser</span></span></span><br><span class="line"><span class="class">        <span class="title">HtmlComment</span></span></span><br><span class="line"><span class="class">        <span class="title">HtmlElement</span></span></span><br><span class="line"><span class="class">    </span></span><br><span class="line"><span class="class">    <span class="title">function</span></span></span><br><span class="line"><span class="class">        <span class="title">document_fromstring</span><span class="params">(html, parser=None, ensure_head_body=False, **kw)</span>    <span class="title">source</span> <span class="title">code</span></span></span><br><span class="line"><span class="class">        <span class="title">fragment_fromstring</span><span class="params">(html, create_parent=False, base_url=None, parser=None, **kw)</span></span></span><br><span class="line"><span class="class">        <span class="title">Element</span><span class="params">(*args, **kw)</span></span></span><br><span class="line"><span class="class">        <span class="title">parse</span><span class="params">(filename_or_url, parser=None, base_url=None, **kw)</span></span></span><br><span class="line"><span class="class">        <span class="title">open_in_browser</span><span class="params">(doc, encoding=None)</span></span></span><br><span class="line"><span class="class">        <span class="title">fromstring</span><span class="params">(html, base_url=None, parser=None, **kw)</span></span></span><br><span class="line"><span class="class">        <span class="title">tostring</span><span class="params">(doc, pretty_print=False, include_meta_content_type=False, encoding=None, method=<span class="string">'html'</span>, with_tail=True, doctype=None)</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">lxml</span>.<span class="title">html</span>.<span class="title">html5parser</span>:</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span>   </span></span><br><span class="line"><span class="class">        <span class="title">HTMLParser</span></span></span><br><span class="line"><span class="class">    <span class="title">function</span></span></span><br><span class="line"><span class="class">        <span class="title">fromstring</span><span class="params">(html, guess_charset=None, parser=None)</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">HtmlElement</span><span class="params">(_Element)</span></span></span><br><span class="line"><span class="class">    <span class="title">cssselect</span><span class="params">(self, expr, translator=<span class="string">'html'</span>)</span></span></span><br><span class="line"><span class="class">    <span class="title">set</span><span class="params">(self, key, value=None)</span></span></span><br></pre></td></tr></table></figure>

<p>平时用的多的是html文档处理，所以下面具体看下html相关内容<br>1、element &lt;-&gt; string 之间转换</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> html</span><br><span class="line"></span><br><span class="line">text = <span class="string">'&lt;div&gt;&lt;span&gt;&lt;p&gt;内容&lt;/p&gt;&lt;/span&gt;&lt;/div&gt;'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文档方式</span></span><br><span class="line">root1 = html.document_fromstring(text)</span><br><span class="line">print(html.tostring(root1, encoding=<span class="string">"unicode"</span>))</span><br><span class="line"><span class="comment"># &lt;html&gt;&lt;body&gt;&lt;div&gt;&lt;span&gt;&lt;p&gt;内容&lt;/p&gt;&lt;/span&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 片段方式</span></span><br><span class="line">root2 = html.fragment_fromstring(text)</span><br><span class="line">print(html.tostring(root2, encoding=<span class="string">"unicode"</span>))</span><br><span class="line"><span class="comment"># &lt;div&gt;&lt;span&gt;&lt;p&gt;内容&lt;/p&gt;&lt;/span&gt;&lt;/div&gt;</span></span><br></pre></td></tr></table></figure>

<p>2、助手函数</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 为了方便查看结果，统一使用输出函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">log_html</span><span class="params">(element)</span>:</span></span><br><span class="line">    print(html.tostring(element, encoding=<span class="string">'unicode'</span>, pretty_print=<span class="literal">True</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在浏览器中打开（调试用）</span></span><br><span class="line">html.open_in_browser(root)</span><br></pre></td></tr></table></figure>

<p>3、创建元素</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 创建元素 添加属性</span></span><br><span class="line">root = html.Element(<span class="string">'div'</span>, &#123;<span class="string">'width'</span>: <span class="string">'23px'</span>&#125;)</span><br><span class="line">root.text = <span class="string">"根元素"</span></span><br><span class="line">root.tail = <span class="string">"元素后面的文本"</span></span><br><span class="line">root.base = <span class="string">"www.baidu.com"</span></span><br><span class="line"></span><br><span class="line">log_html(root)</span><br><span class="line"><span class="comment"># &lt;div width="23px" xml:base="www.baidu.com"&gt;根元素&lt;/div&gt;元素后面的文本</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取属性</span></span><br><span class="line">print(root.attrib)  </span><br><span class="line"><span class="comment"># &#123;'width': '23px', '&#123;http://www.w3.org/XML/1998/namespace&#125;base': 'www.baidu.com'&#125;</span></span><br><span class="line">print(root.text)    <span class="comment"># 根元素</span></span><br><span class="line">print(root.tag)     <span class="comment"># div</span></span><br><span class="line">print(root.tail)    <span class="comment"># 元素后面的文本</span></span><br><span class="line">print(root.base)   <span class="comment"># None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 元素属性</span></span><br><span class="line">print(root.keys())</span><br><span class="line"><span class="comment"># ['width']</span></span><br><span class="line"></span><br><span class="line">print(root.values())</span><br><span class="line"><span class="comment"># ['23px']</span></span><br><span class="line"></span><br><span class="line">print(root.items())</span><br><span class="line"><span class="comment"># [('width', '23px')]</span></span><br><span class="line"></span><br><span class="line">root.set(<span class="string">'height'</span>, <span class="string">'300px'</span>)</span><br><span class="line">print(root.get(<span class="string">'height'</span>))</span><br><span class="line"><span class="comment"># 300px</span></span><br><span class="line"></span><br><span class="line">root.attrib.pop(<span class="string">'height'</span>)</span><br></pre></td></tr></table></figure>

<p>4、修改元素增加、删除、替换</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建元素</span></span><br><span class="line">root = html.Element(<span class="string">'div'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加子节点</span></span><br><span class="line">p = html.Element(<span class="string">'p'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 追加一个元素</span></span><br><span class="line">root.append(p)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 追加多个元素</span></span><br><span class="line">root.extend([html.Element(<span class="string">'span1'</span>), html.Element(<span class="string">'span2'</span>)])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 插入元素</span></span><br><span class="line">root.insert(<span class="number">0</span>, html.Element(<span class="string">'span3'</span>))</span><br><span class="line">root.insert(<span class="number">2</span>, html.Element(<span class="string">'span4'</span>))</span><br><span class="line"><span class="comment"># log_html(root)</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">&lt;div&gt;</span></span><br><span class="line"><span class="string">    &lt;span3&gt;&lt;/span3&gt;</span></span><br><span class="line"><span class="string">    &lt;p&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;span4&gt;&lt;/span4&gt;</span></span><br><span class="line"><span class="string">    &lt;span1&gt;&lt;/span1&gt;</span></span><br><span class="line"><span class="string">    &lt;span2&gt;&lt;/span2&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 选择并移除节点</span></span><br><span class="line">root.remove(root.xpath(<span class="string">"//span1"</span>)[<span class="number">0</span>])</span><br><span class="line">root.remove(root.cssselect(<span class="string">"span2"</span>)[<span class="number">0</span>])</span><br><span class="line">root.remove(root.xpath(<span class="string">"//span3"</span>)[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 替换节点</span></span><br><span class="line">root.replace(root.xpath(<span class="string">"//span4"</span>)[<span class="number">0</span>], html.Element(<span class="string">'span5'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加兄弟节点</span></span><br><span class="line">p.addprevious(html.Element(<span class="string">'span'</span>, text=<span class="string">'前面'</span>))</span><br><span class="line">p.addnext(html.Element(<span class="string">'span'</span>, text=<span class="string">'后面'</span>))</span><br><span class="line">log_html(root)</span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">&lt;div&gt;</span></span><br><span class="line"><span class="string">&lt;span text="前面"&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;span text="后面"&gt;&lt;/span&gt;</span></span><br><span class="line"><span class="string">&lt;span5&gt;&lt;/span5&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 清除所有内容</span></span><br><span class="line">root.clear()</span><br><span class="line">log_html(root)</span><br><span class="line"><span class="comment"># &lt;div&gt;&lt;/div&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加注释</span></span><br><span class="line">root.append(html.HtmlComment(<span class="string">"注释"</span>))</span><br><span class="line">log_html(root)</span><br><span class="line"><span class="comment"># &lt;div&gt;&lt;!--注释--&gt;&lt;/div&gt;</span></span><br></pre></td></tr></table></figure>

<p>5、元素查找</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建元素</span></span><br><span class="line">text = <span class="string">'&lt;div&gt;&lt;p&gt;p中的内容&lt;span&gt;span1的内容&lt;/span&gt;&lt;span width="200px"&gt;span2的内容&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;'</span></span><br><span class="line">root = html.fragment_fromstring(text)</span><br><span class="line"></span><br><span class="line"><span class="comment"># css 或 xpath查询元素</span></span><br><span class="line">print(root.cssselect(<span class="string">'span'</span>))</span><br><span class="line"><span class="comment"># [&lt;Element span&gt;, &lt;Element span&gt;]</span></span><br><span class="line"></span><br><span class="line">print(root.xpath(<span class="string">'//span'</span>))</span><br><span class="line"><span class="comment"># [&lt;Element span &gt;, &lt;Element span &gt;]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找子元素</span></span><br><span class="line">print(root.find(<span class="string">'.//span'</span>))</span><br><span class="line"><span class="comment"># &lt;Element span at&gt;</span></span><br><span class="line"></span><br><span class="line">print(root.findall(<span class="string">'.//span'</span>))</span><br><span class="line"><span class="comment"># [&lt;Element span at&gt;, &lt;Element span at&gt;]</span></span><br><span class="line"></span><br><span class="line">print(root.findtext(<span class="string">'.//span'</span>))</span><br><span class="line"><span class="comment"># span1的内容</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 子元素</span></span><br><span class="line">print(root.getchildren())</span><br><span class="line"><span class="comment"># [&lt;Element p at &gt;]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 父元素</span></span><br><span class="line">span = root.xpath(<span class="string">'//span[@width="200px"]'</span>)[<span class="number">0</span>]</span><br><span class="line">print(span.getparent())</span><br><span class="line"><span class="comment"># &lt;Element p at&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 兄弟元素</span></span><br><span class="line">print(span.getnext())</span><br><span class="line"><span class="comment"># None</span></span><br><span class="line"></span><br><span class="line">print(span.getprevious().text)</span><br><span class="line"><span class="comment"># span1的内容</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取根元素</span></span><br><span class="line">print(log_html(span.getroottree()))</span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" "http://www.w3.org/TR/REC-html40/loose.dtd"&gt;</span></span><br><span class="line"><span class="string">&lt;html&gt;&lt;body&gt;&lt;div&gt;&lt;p&gt;p中的内容&lt;span&gt;span1的内容&lt;/span&gt;</span></span><br><span class="line"><span class="string">&lt;span width="200px"&gt;span2的内容&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找子元素位置</span></span><br><span class="line">print(span.getparent().index(span))</span><br><span class="line"><span class="comment"># 1</span></span><br></pre></td></tr></table></figure>

<p>6、etree提供的功能函数</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> html, etree</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建元素</span></span><br><span class="line">text = <span class="string">'&lt;div&gt;&lt;p width="200px"&gt;p中的内容&lt;span width="200px"&gt;span的内容&lt;/span&gt;&lt;/p&gt;p后的内容&lt;/div&gt;'</span></span><br><span class="line">root = html.fragment_fromstring(text)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 移除属性</span></span><br><span class="line">etree.strip_attributes(root, [<span class="string">'width'</span>])</span><br><span class="line">log_html(root)</span><br><span class="line"><span class="comment"># &lt;div&gt;&lt;p&gt;p中的内容&lt;span&gt;span的内容&lt;/span&gt;span后的内容&lt;/p&gt;&lt;/div&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 元素和子元素</span></span><br><span class="line"><span class="comment"># etree.strip_elements(root, ['p'], with_tail=True)</span></span><br><span class="line"><span class="comment"># log_html(root)</span></span><br><span class="line"><span class="comment"># &lt;div&gt;&lt;/div&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 移除元素标签，保留子元素</span></span><br><span class="line">etree.strip_tags(root, [<span class="string">'p'</span>])</span><br><span class="line">log_html(root)</span><br><span class="line"><span class="comment"># &lt;div&gt;p中的内容&lt;span&gt;span的内容&lt;/span&gt;p后的内容&lt;/div&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>参考<br><a href="https://lxml.de/api/" target="_blank" rel="noopener">https://lxml.de/api/</a></p>
</blockquote>
]]></content>
      <categories>
        <category>爬虫</category>
      </categories>
      <tags>
        <tag>lxml</tag>
      </tags>
  </entry>
  <entry>
    <title>PyCharm激活方式</title>
    <url>/2020/pycharm-active-method/</url>
    <content><![CDATA[<h2 id="方式一：激活码激活"><a href="#方式一：激活码激活" class="headerlink" title="方式一：激活码激活"></a>方式一：激活码激活</h2><p>1、修改hosts文件<br>Windows系统hosts文件路径为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">c:\windows\system32\drivers\etc</span><br></pre></td></tr></table></figure>

<p>Mac和Ubantu(Linux)系统hosts文件路径为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;etc</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p>添加到hosts文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0.0.0.0 account.jetbrains.com</span><br><span class="line">0.0.0.0 www.jetbrains.com</span><br></pre></td></tr></table></figure>
<p>如果遇到无法修改或权限问题，可以采用覆盖的方法去替换hosts文件</p>
<p>2、 激活码激活</p>
<p>链接: <a href="https://pan.baidu.com/s/15fwBuZco-z5uRlHWieMZNQ" target="_blank" rel="noopener">https://pan.baidu.com/s/15fwBuZco-z5uRlHWieMZNQ</a> 提取码: ihtv </p>
<h2 id="方式二：破解文件激活"><a href="#方式二：破解文件激活" class="headerlink" title="方式二：破解文件激活"></a>方式二：破解文件激活</h2><p>1、下载补丁文件<br>下载 jetbrains-agent.jar 并将它放置到 pycharm安装目录的\bin目录下 </p>
<p> <a href="https://pan.baidu.com/s/112tS3XjAENIHaJ-aSCe0dA" target="_blank" rel="noopener">https://pan.baidu.com/s/112tS3XjAENIHaJ-aSCe0dA</a> </p>
<p>备用：链接: <a href="https://pan.baidu.com/s/1_ZgFmo2u2OA30mbTTeB8OA" target="_blank" rel="noopener">https://pan.baidu.com/s/1_ZgFmo2u2OA30mbTTeB8OA</a> 提取码: ndws</p>
<p>2、配置pycharm<br>Evaluate for free -&gt; “Help” -&gt; “Edit Custom VM Options …” -&gt; 创建文件<br>最后添加</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-javaagent:你pycharm的安装目录\jetbrains-agent.jar</span><br></pre></td></tr></table></figure>

<p>3、重启Pycharm<br>4、激活<br>“Help” -&gt; “Register …” -&gt; Discover Server -&gt; Activation</p>
<p>(1) License server<br><a href="http://jetbrains-license-server" target="_blank" rel="noopener">http://jetbrains-license-server</a></p>
<p>(2) Activation code:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">eyJsaWNlbnNlSWQiOiJEMDBGMUJEVEdGIiwibGljZW5zZWVOYW1lIjoiaHR0cHM6Ly96aGlsZS5pbyIsImFzc2lnbmVlTmFtZSI6IiIsImFzc2lnbmVlRW1haWwiOiIiLCJsaWNlbnNlUmVzdHJpY3Rpb24iOiJVbmxpbWl0ZWQgbGljZW5zZSB0aWxsIGVuZCBvZiB0aGUgY2VudHVyeS4iLCJjaGVja0NvbmN1cnJlbnRVc2UiOmZhbHNlLCJwcm9kdWN0cyI6W3siY29kZSI6IklJIiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiUlMwIiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiV1MiLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJSRCIsInBhaWRVcFRvIjoiMjA4OS0wNy0wNyJ9LHsiY29kZSI6IlJDIiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiREMiLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJEQiIsInBhaWRVcFRvIjoiMjA4OS0wNy0wNyJ9LHsiY29kZSI6IlJNIiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiRE0iLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJBQyIsInBhaWRVcFRvIjoiMjA4OS0wNy0wNyJ9LHsiY29kZSI6IkRQTiIsInBhaWRVcFRvIjoiMjA4OS0wNy0wNyJ9LHsiY29kZSI6IkdPIiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiUFMiLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJDTCIsInBhaWRVcFRvIjoiMjA4OS0wNy0wNyJ9LHsiY29kZSI6IlBDIiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiUlNVIiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In1dLCJoYXNoIjoiODkwNzA3MC8wIiwiZ3JhY2VQZXJpb2REYXlzIjowLCJhdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlLCJpc0F1dG9Qcm9sb25nYXRlZCI6ZmFsc2V9</span><br></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">A82DEE284F-eyJsaWNlbnNlSWQiOiJBODJERUUyODRGIiwibGljZW5zZWVOYW1lIjoiaHR0cHM6Ly96aGlsZS5pbyIsImFzc2lnbmVlTmFtZSI6IiIsImFzc2lnbmVlRW1haWwiOiIiLCJsaWNlbnNlUmVzdHJpY3Rpb24iOiJVbmxpbWl0ZWQgbGljZW5zZSB0aWxsIGVuZCBvZiB0aGUgY2VudHVyeS4iLCJjaGVja0NvbmN1cnJlbnRVc2UiOmZhbHNlLCJwcm9kdWN0cyI6W3siY29kZSI6IklJIiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiUlMwIiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiV1MiLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJSRCIsInBhaWRVcFRvIjoiMjA4OS0wNy0wNyJ9LHsiY29kZSI6IlJDIiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiREMiLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJEQiIsInBhaWRVcFRvIjoiMjA4OS0wNy0wNyJ9LHsiY29kZSI6IlJNIiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiRE0iLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJBQyIsInBhaWRVcFRvIjoiMjA4OS0wNy0wNyJ9LHsiY29kZSI6IkRQTiIsInBhaWRVcFRvIjoiMjA4OS0wNy0wNyJ9LHsiY29kZSI6IkdPIiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiUFMiLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJDTCIsInBhaWRVcFRvIjoiMjA4OS0wNy0wNyJ9LHsiY29kZSI6IlBDIiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiUlNVIiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In1dLCJoYXNoIjoiODkwNzA3MC8wIiwiZ3JhY2VQZXJpb2REYXlzIjowLCJhdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlLCJpc0F1dG9Qcm9sb25nYXRlZCI6ZmFsc2V9-5epo90Xs7KIIBb8ckoxnB&#x2F;AZQ8Ev7rFrNqwFhBAsQYsQyhvqf1FcYdmlecFWJBHSWZU9b41kvsN4bwAHT5PiznOTmfvGv1MuOzMO0VOXZlc+edepemgpt+t3GUHvfGtzWFYeKeyCk+CLA9BqUzHRTgl2uBoIMNqh5izlDmejIwUHLl39QOyzHiTYNehnVN7GW5+QUeimTr&#x2F;koVUgK8xofu59Tv8rcdiwIXwTo71LcU2z2P+T3R81fwKkt34evy7kRch4NIQUQUno&#x2F;&#x2F;Pl3V0rInm3B2oFq9YBygPUdBUbdH&#x2F;KHROyohZRD8SaZJO6kUT0BNvtDPKF4mCT1saWM38jkw&#x3D;&#x3D;-MIIElTCCAn2gAwIBAgIBCTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE4MTEwMTEyMjk0NloXDTIwMTEwMjEyMjk0NlowaDELMAkGA1UEBhMCQ1oxDjAMBgNVBAgMBU51c2xlMQ8wDQYDVQQHDAZQcmFndWUxGTAXBgNVBAoMEEpldEJyYWlucyBzLnIuby4xHTAbBgNVBAMMFHByb2QzeS1mcm9tLTIwMTgxMTAxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA5ndaik1GD0nyTdqkZgURQZGW+RGxCdBITPXIwpjhhaD0SXGa4XSZBEBoiPdY6XV6pOfUJeyfi9dXsY4MmT0D+sKoST3rSw96xaf9FXPvOjn4prMTdj3Ji3CyQrGWeQU2nzYqFrp1QYNLAbaViHRKuJrYHI6GCvqCbJe0LQ8qqUiVMA9wG&#x2F;PQwScpNmTF9Kp2Iej+Z5OUxF33zzm+vg&#x2F;nYV31HLF7fJUAplI&#x2F;1nM+ZG8K+AXWgYKChtknl3sW9PCQa3a3imPL9GVToUNxc0wcuTil8mqveWcSQCHYxsIaUajWLpFzoO2AhK4mfYBSStAqEjoXRTuj17mo8Q6M2SHOcwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl&#x2F;GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQBonMu8oa3vmNAa4RQP8gPGlX3SQaA3WCRUAj6Zrlk8AesKV1YSkh5D2l+yUk6njysgzfr1bIR5xF8eup5xXc4&#x2F;G7NtVYRSMvrd6rfQcHOyK5UFJLm+8utmyMIDrZOzLQuTsT8NxFpbCVCfV5wNRu4rChrCuArYVGaKbmp9ymkw1PU6+HoO5i2wU3ikTmRv8IRjrlSStyNzXpnPTwt7bja19ousk56r40SmlmC04GdDHErr0ei2UbjUua5kw71Qn9g02tL9fERI2sSRjQrvPbn9INwRWl5+k05mlKekbtbu2ev2woJFZK4WEXAd&#x2F;GaAdeZZdumv8T2idDFL7cAirJwcrbfpawPeXr52oKTPnXfi0l5+g9Gnt&#x2F;wfiXCrPElX6ycTR6iL3GC2VR4jTz6YatT4Ntz59&#x2F;THOT7NJQhr6AyLkhhJCdkzE2cob&#x2F;KouVp4ivV7Q3Fc6HX7eepHAAF&#x2F;DpxwgOrg9smX6coXLgfp0b1RU2u&#x2F;tUNID04rpNxTMueTtrT8WSskqvaJd3RH8r7cnRj6Y2hltkja82HlpDURDxDTRvv+krbwMr26SB&#x2F;40BjpMUrDRCeKuiBahC0DCoU&#x2F;4+ze1l94wVUhdkCfL0GpJrMSCDEK+XEurU18Hb7WT+ThXbkdl6VpFdHsRvqAnhR2g4b+Qzgidmuky5NUZVfEaZqV&#x2F;g&#x3D;&#x3D;</span><br></pre></td></tr></table></figure>

<p>5、查看有效期<br>Help-&gt;About</p>
<blockquote>
<p>参考<br><a href="https://blog.csdn.net/u014044812/article/details/78727496" target="_blank" rel="noopener">pyCharm最新2018激活码</a><br><a href="https://www.jianshu.com/p/355a6920116f" target="_blank" rel="noopener">2019Pycharm永久激活</a></p>
</blockquote>
]]></content>
      <tags>
        <tag>PyCharm</tag>
      </tags>
  </entry>
  <entry>
    <title>Webpack插件使用及热更新打包</title>
    <url>/2020/webpack-plugin-and-hot-server/</url>
    <content><![CDATA[<p>1、HtmlWebpackPlugin 自动生成基本的 html 页面<br>2、开启文件监听<br>3、webpack-dev-server热更新</p>
<a id="more"></a>

<p>安装依赖</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cnpm i html-webpack-plugin webpack-dev-server -D</span><br></pre></td></tr></table></figure>

<p>配置文件<br>1、.babelrc</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;presets&quot;: [</span><br><span class="line">        &quot;@babel&#x2F;preset-env&quot;,</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2、package.json</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"web-demo"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">  <span class="attr">"description"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="attr">"main"</span>: <span class="string">"index.js"</span>,</span><br><span class="line">  <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">    <span class="attr">"build"</span>: <span class="string">"webpack"</span>,</span><br><span class="line">    <span class="attr">"watch"</span>: <span class="string">"webpack --watch"</span>,</span><br><span class="line">    <span class="attr">"dev"</span>: <span class="string">"webpack-dev-server --open"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"keywords"</span>: [],</span><br><span class="line">  <span class="attr">"author"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="attr">"license"</span>: <span class="string">"ISC"</span>,</span><br><span class="line">  <span class="attr">"devDependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"@babel/core"</span>: <span class="string">"^7.9.0"</span>,</span><br><span class="line">    <span class="attr">"@babel/preset-env"</span>: <span class="string">"^7.9.0"</span>,</span><br><span class="line">    <span class="attr">"babel-loader"</span>: <span class="string">"^8.1.0"</span>,</span><br><span class="line">    <span class="attr">"css-loader"</span>: <span class="string">"^3.4.2"</span>,</span><br><span class="line">    <span class="attr">"file-loader"</span>: <span class="string">"^6.0.0"</span>,</span><br><span class="line">    <span class="attr">"html-webpack-plugin"</span>: <span class="string">"^4.0.3"</span>,</span><br><span class="line">    <span class="attr">"less"</span>: <span class="string">"^3.11.1"</span>,</span><br><span class="line">    <span class="attr">"less-loader"</span>: <span class="string">"^5.0.0"</span>,</span><br><span class="line">    <span class="attr">"style-loader"</span>: <span class="string">"^1.1.3"</span>,</span><br><span class="line">    <span class="attr">"url-loader"</span>: <span class="string">"^4.0.0"</span>,</span><br><span class="line">    <span class="attr">"webpack"</span>: <span class="string">"^4.42.1"</span>,</span><br><span class="line">    <span class="attr">"webpack-cli"</span>: <span class="string">"^3.3.11"</span>,</span><br><span class="line">    <span class="attr">"webpack-dev-server"</span>: <span class="string">"^3.10.3"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>3、webpack.config.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="meta">'use strict'</span></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> HtmlWebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>)</span><br><span class="line"><span class="keyword">const</span> webpack = <span class="built_in">require</span>(<span class="string">'webpack'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    <span class="comment">// 文件监听</span></span><br><span class="line">    watch: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line">    watchOptions: &#123;</span><br><span class="line">        <span class="comment">//默认为空，设置不监听的文件或者文件夹，支持正则匹配</span></span><br><span class="line">        ignored: <span class="regexp">/node_modules/</span>,</span><br><span class="line">        <span class="comment">//监听到变化发生后会等300ms再去执行，默认300ms</span></span><br><span class="line">        aggregateTimeout: <span class="number">300</span>,</span><br><span class="line">        <span class="comment">//设置轮询文件是否变化时间，默认每秒问1000次</span></span><br><span class="line">        poll: <span class="number">1000</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 打包入口</span></span><br><span class="line">    entry: &#123;</span><br><span class="line">        index: <span class="string">'./src/index.js'</span>,</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 指定输出地址及打包出来的文件名</span></span><br><span class="line">    output: &#123;</span><br><span class="line">        path: path.join(__dirname, <span class="string">'dist'</span>),</span><br><span class="line">        filename: <span class="string">'index.js'</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    plugins: [</span><br><span class="line">        <span class="comment">// 自动生成基本的 html 页面</span></span><br><span class="line">        <span class="keyword">new</span> HtmlWebpackPlugin(&#123;</span><br><span class="line">            title: <span class="string">'leaningwebpack'</span>,        <span class="comment">// 文件的标题</span></span><br><span class="line">            filename: <span class="string">'webpack-index.html'</span>, <span class="comment">// 文件名</span></span><br><span class="line">            favicon: <span class="string">'src/demo.png'</span>          <span class="comment">// 网页图标</span></span><br><span class="line">        &#125;),</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 热更新</span></span><br><span class="line">        <span class="keyword">new</span> webpack.HotModuleReplacementPlugin()</span><br><span class="line">    ],</span><br><span class="line"></span><br><span class="line">    devServer: &#123;</span><br><span class="line">        contentBase: <span class="string">'./dist'</span>,</span><br><span class="line">        hot: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        rules: [</span><br><span class="line">            &#123;</span><br><span class="line">                test: <span class="regexp">/.js$/</span>,</span><br><span class="line">                use: <span class="string">'babel-loader'</span>,</span><br><span class="line">                <span class="comment">// 忽略依赖包</span></span><br><span class="line">                exclude: <span class="regexp">/node_modules/</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                test: <span class="regexp">/.css$/</span>,</span><br><span class="line">                <span class="comment">// 执行的时候是先加载css-loader，将css解析好后再将css传递给style-loader</span></span><br><span class="line">                use: [</span><br><span class="line">                    <span class="string">'style-loader'</span>,</span><br><span class="line">                    <span class="string">'css-loader'</span>,</span><br><span class="line">                ]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                test: <span class="regexp">/.less$/</span>,</span><br><span class="line">                use: [</span><br><span class="line">                    <span class="string">'style-loader'</span>,</span><br><span class="line">                    <span class="string">'css-loader'</span>,</span><br><span class="line">                    <span class="string">'less-loader'</span></span><br><span class="line">                ]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                test: <span class="regexp">/.(jpg|png|gif|jpeg)$/</span>,</span><br><span class="line">                use: [&#123;</span><br><span class="line">                    loader: <span class="string">'url-loader'</span>,</span><br><span class="line">                    options: &#123;</span><br><span class="line">                        <span class="comment">// 如果图片大小小于这个值，就会被打包为base64格式</span></span><br><span class="line">                        limit: <span class="number">160000</span>,</span><br><span class="line">                        name: <span class="string">'imgs/[name].[hash].[ext]'</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;]</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 开发环境</span></span><br><span class="line">    mode: <span class="string">'production'</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>参考<br><a href="https://mp.weixin.qq.com/s/ggCFFYfpoPPBj7geOJv4nQ" target="_blank" rel="noopener">Webpack 实战入门系列（二）：插件使用及热更新打包</a></p>
</blockquote>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>Webpack</tag>
      </tags>
  </entry>
  <entry>
    <title>Webpack快速入门</title>
    <url>/2020/webpack-quick-start/</url>
    <content><![CDATA[<p>webpack 是一个现代 JavaScript 应用程序的静态模块打包器(module bundler)</p>
<a id="more"></a>

<h2 id="一、webpack简单入门"><a href="#一、webpack简单入门" class="headerlink" title="一、webpack简单入门"></a>一、webpack简单入门</h2><p>1、webpack安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装webpack</span></span><br><span class="line">npm init -y</span><br><span class="line">npm install webpack webpack-cli --save-dev</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看版本</span></span><br><span class="line">./node_modules/.bin/webpack -v</span><br><span class="line">4.42.1</span><br></pre></td></tr></table></figure>

<p>2、准备要打包的文件<br>src/hellowebpack.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">hellowebpack</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'hellowebpack'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>src/index.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; hellowebpack &#125; <span class="keyword">from</span> <span class="string">'./hellowebpack'</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.write(hellowebpack())</span><br></pre></td></tr></table></figure>

<p>3、配置webpack.config.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="meta">'use strict'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    <span class="comment">// 打包入口</span></span><br><span class="line">    entry: &#123;</span><br><span class="line">        index: <span class="string">'./src/index.js'</span>,</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 指定输出地址及打包出来的文件名</span></span><br><span class="line">    output: &#123;</span><br><span class="line">        path: path.join(__dirname, <span class="string">'dist'</span>),</span><br><span class="line">        filename: <span class="string">'index.js'</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 开发环境</span></span><br><span class="line">    mode: <span class="string">'production'</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>4、执行打包</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./node_modules/.bin/webpack</span><br><span class="line"><span class="comment"># dist 文件夹下多出一个index.js文件</span></span><br></pre></td></tr></table></figure>

<p>5、引用打包文件</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./index.js"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>6、配置打包命令<br>package.json</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">"scripts": &#123;</span><br><span class="line">   "build": "webpack"</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<p>打包命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm run build</span><br></pre></td></tr></table></figure>

<p>此时的项目结构为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── dist</span><br><span class="line">│   ├── index.html</span><br><span class="line">│   └── index.js</span><br><span class="line">├── node_modules</span><br><span class="line">├── package.json</span><br><span class="line">├── src</span><br><span class="line">│   ├── hellowebpack.js</span><br><span class="line">│   └── index.js</span><br><span class="line">└── webpack.config.js</span><br></pre></td></tr></table></figure>

<h2 id="二、loader"><a href="#二、loader" class="headerlink" title="二、loader"></a>二、loader</h2><p>配置完之后都需要重新打包生效</p>
<p>1、babel解析es6</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cnpm i @babel/core @babel/preset-env babel-loader -D</span><br></pre></td></tr></table></figure>

<p>根目录新建.babelrc 并配置</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">"presets"</span>: [</span><br><span class="line">        <span class="string">"@babel/preset-env"</span>,</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>配置 webpack.config.js, 添加module属性</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="meta">'use strict'</span></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    <span class="comment">// 打包入口</span></span><br><span class="line">    entry: &#123;</span><br><span class="line">        index: <span class="string">'./src/index.js'</span>,</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 指定输出地址及打包出来的文件名</span></span><br><span class="line">    output: &#123;</span><br><span class="line">        path: path.join(__dirname, <span class="string">'dist'</span>),</span><br><span class="line">        filename: <span class="string">'index.js'</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        rules: [</span><br><span class="line">            &#123;</span><br><span class="line">                test: <span class="regexp">/.js$/</span>,</span><br><span class="line">                use: <span class="string">'babel-loader'</span></span><br><span class="line">            &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 开发环境</span></span><br><span class="line">    mode: <span class="string">'production'</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>babel编译效果</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 编译前</span></span><br><span class="line"><span class="built_in">document</span>.write(<span class="function"><span class="params">()</span> =&gt;</span> hellowebpack())</span><br><span class="line"></span><br><span class="line"><span class="comment">// 编译后</span></span><br><span class="line"><span class="built_in">document</span>.write((<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span><span class="string">"hellowebpack"</span>&#125;))</span><br></pre></td></tr></table></figure>

<p>2、加载css文件<br>css-loader用于加载css文件并生成commonjs对象</p>
<p>style-loader用于将样式通过style标签插入到head中</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm i style-loader css-loader -D</span><br></pre></td></tr></table></figure>

<p>配置 webpack.config.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    test: <span class="regexp">/.css$/</span>,</span><br><span class="line">    <span class="comment">// 执行的时候是先加载css-loader，将css解析好后再将css传递给style-loader</span></span><br><span class="line">    use: [</span><br><span class="line">        <span class="string">'style-loader'</span>,</span><br><span class="line">        <span class="string">'css-loader'</span>,</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>index.js中引入css文件<br>public.css</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.color-text</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">color</span>: red</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>index.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; hellowebpack &#125; <span class="keyword">from</span> <span class="string">'./hellowebpack'</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">"./public.css"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.write(hellowebpack())</span><br></pre></td></tr></table></figure>

<p>3、加载less</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm i less less-loader -D</span><br></pre></td></tr></table></figure>

<p>配置 webpack.config.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    test: <span class="regexp">/.less$/</span>,</span><br><span class="line">    use: [</span><br><span class="line">        <span class="string">'style-loader'</span>,</span><br><span class="line">        <span class="string">'css-loader'</span>,</span><br><span class="line">        <span class="string">'less-loader'</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>4、加载图片</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># url-loader直接内置了file-loader</span></span><br><span class="line">npm i url-loader -D</span><br></pre></td></tr></table></figure>

<p>配置 webpack.config.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    test: <span class="regexp">/.(jpg|png|gif|jpeg)$/</span>,</span><br><span class="line">    use: [&#123;</span><br><span class="line">        loader:<span class="string">'url-loader'</span>,</span><br><span class="line">        options: &#123;</span><br><span class="line">            <span class="comment">// 单位是字节, 如果图片大小小于这个值，就会被打包为base64格式</span></span><br><span class="line">            limit:<span class="number">160000</span>,</span><br><span class="line">            name: <span class="string">'imgs/[name].[hash].[ext]'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="三、完整配置"><a href="#三、完整配置" class="headerlink" title="三、完整配置"></a>三、完整配置</h2><p>目录结构</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ tree -L 2</span><br><span class="line">.</span><br><span class="line">├── dist</span><br><span class="line">│   ├── imgs</span><br><span class="line">│   ├── index.html</span><br><span class="line">│   └── index.js</span><br><span class="line">├── node_modules</span><br><span class="line">├── src</span><br><span class="line">│   ├── demo.png</span><br><span class="line">│   ├── hellowebpack.js</span><br><span class="line">│   ├── index.js</span><br><span class="line">│   └── public.less</span><br><span class="line">├── .babelrc</span><br><span class="line">├── package.json</span><br><span class="line">└── webpack.config.js</span><br></pre></td></tr></table></figure>
<p>三个根目录下的配置文件<br>.babelrc</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">"presets"</span>: [</span><br><span class="line">        <span class="string">"@babel/preset-env"</span>,</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>package.json</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"web-demo"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">  <span class="attr">"description"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="attr">"main"</span>: <span class="string">"index.js"</span>,</span><br><span class="line">  <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">    <span class="attr">"build"</span>: <span class="string">"webpack"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"keywords"</span>: [],</span><br><span class="line">  <span class="attr">"author"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="attr">"license"</span>: <span class="string">"ISC"</span>,</span><br><span class="line">  <span class="attr">"devDependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"@babel/core"</span>: <span class="string">"^7.9.0"</span>,</span><br><span class="line">    <span class="attr">"@babel/preset-env"</span>: <span class="string">"^7.9.0"</span>,</span><br><span class="line">    <span class="attr">"babel-loader"</span>: <span class="string">"^8.1.0"</span>,</span><br><span class="line">    <span class="attr">"css-loader"</span>: <span class="string">"^3.4.2"</span>,</span><br><span class="line">    <span class="attr">"file-loader"</span>: <span class="string">"^6.0.0"</span>,</span><br><span class="line">    <span class="attr">"less"</span>: <span class="string">"^3.11.1"</span>,</span><br><span class="line">    <span class="attr">"less-loader"</span>: <span class="string">"^5.0.0"</span>,</span><br><span class="line">    <span class="attr">"style-loader"</span>: <span class="string">"^1.1.3"</span>,</span><br><span class="line">    <span class="attr">"url-loader"</span>: <span class="string">"^4.0.0"</span>,</span><br><span class="line">    <span class="attr">"webpack"</span>: <span class="string">"^4.42.1"</span>,</span><br><span class="line">    <span class="attr">"webpack-cli"</span>: <span class="string">"^3.3.11"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>webpack.config.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="meta">'use strict'</span></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    <span class="comment">// 打包入口</span></span><br><span class="line">    entry: &#123;</span><br><span class="line">        index: <span class="string">'./src/index.js'</span>,</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 指定输出地址及打包出来的文件名</span></span><br><span class="line">    output: &#123;</span><br><span class="line">        path: path.join(__dirname, <span class="string">'dist'</span>),</span><br><span class="line">        filename: <span class="string">'index.js'</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        rules: [</span><br><span class="line">            &#123;</span><br><span class="line">                test: <span class="regexp">/.js$/</span>,</span><br><span class="line">                use: <span class="string">'babel-loader'</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                test: <span class="regexp">/.css$/</span>,</span><br><span class="line">                <span class="comment">// 执行的时候是先加载css-loader，将css解析好后再将css传递给style-loader</span></span><br><span class="line">                use: [</span><br><span class="line">                    <span class="string">'style-loader'</span>,</span><br><span class="line">                    <span class="string">'css-loader'</span>,</span><br><span class="line">                ]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                test: <span class="regexp">/.less$/</span>,</span><br><span class="line">                use: [</span><br><span class="line">                    <span class="string">'style-loader'</span>,</span><br><span class="line">                    <span class="string">'css-loader'</span>,</span><br><span class="line">                    <span class="string">'less-loader'</span></span><br><span class="line">                ]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                test: <span class="regexp">/.(jpg|png|gif|jpeg)$/</span>,</span><br><span class="line">                use: [&#123;</span><br><span class="line">                    loader: <span class="string">'url-loader'</span>,</span><br><span class="line">                    options: &#123;</span><br><span class="line">                        <span class="comment">// 如果图片大小小于这个值，就会被打包为base64格式</span></span><br><span class="line">                        limit: <span class="number">160000</span>,</span><br><span class="line">                        name: <span class="string">'imgs/[name].[hash].[ext]'</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;]</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 开发环境</span></span><br><span class="line">    mode: <span class="string">'production'</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>参考<br><a href="https://mp.weixin.qq.com/s/fDq_XC4LYuTO2us0Uin9rw" target="_blank" rel="noopener">一小时的时间，上手 Webpack</a></p>
</blockquote>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>Webpack</tag>
      </tags>
  </entry>
</search>
